substitutions:
  switch_name: "Default Light Switch" # Set to desired name in Home Assistant
  up_position: -30% # Change if your servo is not moving far enough or is hitting the end of travel
  down_position: 60% # Change if your servo is not moving far enough or is hitting the end of travel
  center_position: 0% # Change if your servo is not moving far enough or is hitting the end of travel


esphome:
  name: test-table-light-switch

esp8266:
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "f7319c9ba95f6a2bec8ff6b7be688de3"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Test-Table-Light-Switch"
    password: "a5kjzyvw4bIS"

captive_portal:

i2c:
  sda: GPIO4
  scl: GPIO5
  scan: true
  id: bus_a

sensor:
  - platform: ccs811
    eco2:
      name: "Bedroom eCO2"
    tvoc:
      name: "Bedroom TVOC"
    address: 0x5A
    update_interval: 30s

  - platform: shtcx
    temperature:
      name: "Bedroom Tempeature"
    humidity:
      name: "Bedroom Humidity"
    address: 0x70
    update_interval: 30s

light:
  - platform: rgb
    name: "Table Board Light"
    red: red_out
    green: green_out
    blue: blue_out


servo:
  - id: my_servo
    output: pwm_output

output:
  - platform: esp8266_pwm
    id: pwm_output
    pin: D3 # Set this to match the pin you are using
    frequency: 50 Hz # Leave this as-is unless your servo needs a different frequency

  - platform: esp8266_pwm
    id: red_out
    pin: D7
  - platform: esp8266_pwm
    id: green_out
    pin: D6
  - platform: esp8266_pwm
    id: blue_out
    pin: D5
    
switch:
  - platform: template
    name: ${switch_name} # Change the name at the top of the file
    turn_on_action:
      - script.execute: move_up
    turn_off_action:
      - script.execute: move_down
      
script:
  - id: move_up
    then: 
      - servo.write:
          id: my_servo
          level: ${up_position}
      - delay: 1s
      - servo.write:
          id: my_servo
          level: ${center_position}
      - delay: 2s
      - servo.detach: my_servo
  - id: move_down
    then: 
      - servo.write:
          id: my_servo
          level: ${down_position}
      - delay: 1s
      - servo.write:
          id: my_servo
          level: ${center_position}
      - delay: 2s
      - servo.detach: my_servo